_min_copier_version: "9.0"

# TODO: Derive 'crate_name' and use that rather than '_rust'
#       appended to the Python package name.

_answers_file: .auxiliary/configuration/copier-answers.yaml
_subdirectory: template
_templates_suffix: .jinja

project_name:
    type: str
    help: Project directory or Git repository name
    validator: >-
        {% if not (project_name | regex_search("^[a-z][a-z0-9-]*$")) %}
        Project name must contain only lowercase letters, numbers, and hyphens
        {% endif %}

distribution_name:
    type: str
    help: Python distribution name (name on PyPI)
    default: "{{ project_name }}"
    validator: >-
        {% if not (project_name | regex_search("^[a-z][a-z0-9-]*$")) %}
        Distribution name must contain only lowercase letters, numbers, and hyphens
        {% endif %}

package_name:
    type: str
    help: Python package name (name to import)
    default: "{{ distribution_name | replace('-','_') | replace(' ','_') | lower }}"
    validator: >-
        {% if not (package_name | regex_search("^[a-z][a-z0-9_]*$")) %}
        Package name must be lowercase, start with a letter,
        and contain only letters, numbers, and underscores
        {% endif %}

description:
    type: str
    help: Brief package description

author_name:
    type: str
    help: Package author name
    default: 'Eric McDonald'

author_email:
    type: str
    help: Package author email
    default: 'emcd@users.noreply.github.com'

python_versions:
    type: str
    help: Supported Python versions
    multiselect: true
    choices:
        - '3.10'
        - '3.11'
        - '3.12'
        - '3.13'
    default:
        - '3.10'
        - '3.11'
        - '3.12'
        - '3.13'
    validator: >-
        {% if not python_versions %}
        Must specify at least one Python version
        {% endif %}

pypy_versions:
    # Note: 2025-03-24: PyPy 3.11 not supported in Hatch yet.
    #       Still in beta from upstream.
    type: str
    help: Supported PyPy Python versions
    multiselect: true
    choices:
        - '3.10'
    default:
        - '3.10'

python_version_min:
    type: str
    help: Minimum Python version
    default: '3.10'
    validator: >-
        {% if python_version_min not in python_versions %}
        Minimum version must be one of the supported versions
        {% endif %}

development_status:
    type: str
    help: Project development status
    choices:
        - '1 - Planning'
        - '2 - Pre-Alpha'
        - '3 - Alpha'
        - '4 - Beta'
        - '5 - Production/Stable'
        - '6 - Mature'
        - '7 - Inactive'
    default: '3 - Alpha'

year_of_origin:
    type: int
    help: Year project was started
    default: "{{ '%Y' | strftime }}"

enable_rust_extension:
    type: bool
    help: 'Include Rust extension support?'
    default: false

crate_name:
    type: str
    help: Rust crate name
    default: "{{ package_name }}_rust"
    when: "{{ enable_rust_extension }}"
    validator: >-
        {% if not (crate_name | regex_search("^[a-z][a-z0-9_-]*$")) %}
        Crate name must contain only lowercase letters, numbers, underscores, and hyphens
        {% endif %}

extension_name:
    type: str
    help: Extension module name
    default: "_extension"
    when: "{{ enable_rust_extension }}"
    validator: >-
        {% if not (extension_name | regex_search("^[a-z_][a-z0-9_]*$")) %}
        Extension name must contain only lowercase letters, numbers, and underscores
        {% endif %}

include_data_resources:
    type: bool
    help: 'Include data directory with package resources?'
    default: false

enable_property_tests:
    type: bool
    help: 'Enable property-based testing?'
    default: false

enable_publication:
    type: bool
    help: 'Enable package and documentation publication?'
    default: false

enable_cli:
    type: bool
    help: 'Include command-line interface support?'
    default: false

enable_executables:
    type: bool
    help: 'Generate standalone executables for the CLI?'
    default: false
    when: "{{ enable_cli }}"

inject_foundations:
    type: bool
    help: 'Include foundational constructs?'
    default: false

inject_exceptions:
    type: bool
    help: 'Include base exceptions for package?'
    when: "{{ inject_foundations }}"
    default: false

inject_immutables:
    type: bool
    help: 'Include support for immutables with concealment?'
    when: "{{ inject_foundations }}"
    default: false

inject_docstring_utils:
    type: bool
    help: 'Include utilities for docstring generation?'
    when: "{{ inject_foundations }}"
    default: false

gh_owner:
    type: str
    help: Github repository owner
    default: 'emcd'
